# 你可能想使用 `environment.yaml` 而不是 `requirements.txt` 的原因：
# - pip 会循环安装软件包，无法确保同时满足所有软件包的依赖关系，而 conda 可以对所有软件包进行恰当的依赖控制
# - conda 允许在系统中不需要某些编译器或库可用的情况下安装软件包，因为它安装的是预编译的二进制文件

name: myenv

channels:
  - conda-forge
  - defaults

# 强烈建议为通过 conda 安装的包指定版本
# 以避免当包未指定版本时，安装它们的最新主版本可能会破坏现有环境

# 目前的做法在所有用户之间保持相同的主版本，但允许在通常兼容的情况下使用不同的次版本和补丁版本

dependencies:
  - cudatoolkit=11.8.*
  - hydra-core=1.*
  - rich=13.*
  - pre-commit=3.*
  - pytest=7.*
  - pip>=23
  - pip:
      - nvidia-cudnn-cu11==8.6.0.163
      - tensorflow==2.13.*
      - hydra-optuna-sweeper
      - hydra-colorlog
      - rootutils
      - PyDOE
      - scipy
      - matplotlib
      - tqdm
